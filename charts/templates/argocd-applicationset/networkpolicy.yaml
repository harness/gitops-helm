{{- $argo := (index .Values "argo-cd") -}}
{{- if and $argo.applicationSet.enabled .Values.harness.networkPolicy.create (or $argo.applicationSet.metrics.enabled $argo.applicationSet.webhook.ingress.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ template "argo-cd.applicationSet.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "harness.labels" (dict "context" . "component" .Values.applicationSet.name "name" .Values.applicationSet.name) | nindent 4 }}
spec:
  ingress:
  {{- if $argo.applicationSet.webhook.ingress.enabled }}
  - ports:
    - port: webhook
  {{- end }}
  {{- if $argo.applicationSet.metrics.enabled }}
  - from:
    - namespaceSelector: {}
    ports:
    - port: metrics
  {{- end }}
  podSelector:
    matchLabels:
      {{- include "harness.selectorLabels" (dict "context" . "name" .Values.applicationSet.name) | nindent 6 }}
  policyTypes:
  - Ingress
{{- end }}
